@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "ImportanciaPIVMovGridview";
        settings.CallbackRouteValues = new { Controller = "ImportanciaPIVMov", Action = "ImportanciaPIVMovGridViewPartial", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ImportanciaPIVMov", Action = "ImportanciaPIVMovGridViewPartialAddNew", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ImportanciaPIVMov", Action = "ImportanciaPIVMovGridViewPartialUpdate", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ImportanciaPIVMov", Action = "ImportanciaPIVMovGridViewPartialDelete", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

        settings.SettingsPopup.EditForm.Height = 200;
        settings.SettingsPopup.EditForm.Width = 625;
        settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.Modal = true;

        settings.SettingsBehavior.ConfirmDelete = true;
        settings.Settings.ShowFilterRow = true;

        settings.CommandColumn.Visible = true;
        settings.SettingsCommandButton.NewButton.Text = "Nuevo PVIs";
        settings.CommandColumn.ShowNewButtonInHeader = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowDeleteButton = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowEditButton = Convert.ToBoolean(ViewData["Escritura"]) || Convert.ToBoolean(ViewData["Lectura"]);
        settings.CommandColumn.ShowClearFilterButton = true;

        settings.KeyFieldName = "Pk_IdImportanciaPIVMov";

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSize = 3;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "15" };
        settings.Settings.ShowFilterRowMenu = true;

        settings.Columns.Add("NumPIVsFitosanitario", "Núm. PVI's Fitosanitarios").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("NumPIVsZoosanitario", "Núm PVI's Zoosanitarios").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("NumPIVsFitoZoosaniatrio", "Núm. PVI's Fitozoosanitarios").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("NumSitiosInspeccion", "Núm. Sitios de Inspección").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("NumRutasItinerantes", "Núm. de Rutas Itinerantes").PropertiesEdit.DisplayFormatString = "n";

        //Totales
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumPIVsFitosanitario").DisplayFormat = "n";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumPIVsZoosanitario").DisplayFormat = "n";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumPIVsFitoZoosaniatrio").DisplayFormat = "n";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumSitiosInspeccion").DisplayFormat = "n";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumRutasItinerantes").DisplayFormat = "n";
        settings.Settings.ShowFooter = true;

        //nuevo
        settings.SetEditFormTemplateContent(c =>
        {
            var Pvis = ViewData["dataItem"] ?? c.DataItem;
            ViewContext.Writer.Write("<p>Edición de Importancia PVIs</p>");
            ViewContext.Writer.Write("<table><tr><td>");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Núm. PVI's Fitosanitarios";
                edtSettings.AssociatedControlName = "NumPIVsFitosanitario";
            }).Render();

            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumPIVsFitosanitario";
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
            }).Bind(DataBinder.Eval(Pvis, "NumPIVsFitosanitario"))
            .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Núm. PVI's Zoosanitarios";
                edtSettings.AssociatedControlName = "NumPIVsZoosanitario";
            }).Render();

            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumPIVsZoosanitario";
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
            }).Bind(DataBinder.Eval(Pvis, "NumPIVsZoosanitario"))
            .Render();

            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Núm. PVI's Fitozoosanitarios";
                edtSettings.AssociatedControlName = "NumPIVsFitoZoosaniatrio";
            }).Render();

            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumPIVsFitoZoosaniatrio";
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
            }).Bind(DataBinder.Eval(Pvis, "NumPIVsFitoZoosaniatrio"))
            .Render();
            ViewContext.Writer.Write("</td>" + "</tr>" + "</table>");

            ViewContext.Writer.Write("</br>");

            ViewContext.Writer.Write("<table>" + "<tr>" + "<td>");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Núm. Sitios de Inspección";
                edtSettings.AssociatedControlName = "NumSitiosInspeccion";
            }).Render();

            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumSitiosInspeccion";
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Float;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
            }).Bind(DataBinder.Eval(Pvis, "NumSitiosInspeccion"))
            .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Núm. de Rutas Itinerantes";
                edtSettings.AssociatedControlName = "NumRutasItinerantes";
            }).Render();

            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumRutasItinerantes";
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Float;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
            }).Bind(DataBinder.Eval(Pvis, "NumRutasItinerantes"))
            .Render();

            ViewContext.Writer.Write("</td>" + "</tr>" + "</table>");
            ViewContext.Writer.Write("<br>");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnUpdat";
                btnSettings.Text = "Guardar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/guardar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Images.Image.Width = 16;
                btnSettings.ClientSideEvents.Click = "function(s, e){ ImportanciaPIVMovGridview.UpdateEdit(); }";
                btnSettings.ClientVisible = Convert.ToBoolean(ViewData["Escritura"]);
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnCance";
                btnSettings.Text = "Cancelar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/cancelar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Style["position"] = "relative";
                btnSettings.Style["left"] = "5px";
                btnSettings.ClientSideEvents.Click = "function(s, e){ ImportanciaPIVMovGridview.CancelEdit(); }";
            }).Render();

            ViewContext.Writer.Write("</br>");
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()