@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "AtendidoMovGridView";
        settings.CallbackRouteValues = new { Controller = "AtendidoMov", Action = "AtendidoMovGridViewPartial", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "AtendidoMov", Action = "AtendidoMovAddNew", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "AtendidoMov", Action = "AtendidoMovUpdate", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "AtendidoMov", Action = "AtendidoMovDelete", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

        settings.SettingsText.PopupEditFormCaption = "Edición de Atendido";

        settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.Modal = true;

        settings.SettingsBehavior.ConfirmDelete = true;
        settings.Settings.ShowFilterRow = true;

        settings.CommandColumn.Visible = true;
        settings.SettingsCommandButton.NewButton.Text = "Nuevo";
        settings.CommandColumn.ShowNewButtonInHeader = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowDeleteButton = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowEditButton = Convert.ToBoolean(ViewData["Escritura"]) || Convert.ToBoolean(ViewData["Lectura"]);
        settings.CommandColumn.ShowClearFilterButton = true;

        settings.KeyFieldName = "Pk_IdAtendidoMov";

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSize = 5;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "15" };
        settings.Settings.ShowFilterRowMenu = true;

        settings.Columns.Add("NombrePVI_SitioInspeccion", "Nombre del PVI, Sitio de Inspección o Ruta Itinerante");
        settings.Columns.Add("MateriaInspeccion", "Materia de Inspección");
        settings.Columns.AddBand(AnioAntBand =>
        {
            AnioAntBand.Caption = "Año Anterior";
            AnioAntBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;

            AnioAntBand.Columns.Add("NumInspeccion_Ant", "Núm. de Inspecciones").PropertiesEdit.DisplayFormatString = "n";
            AnioAntBand.Columns.Add("NumMedidasAplicadas_Ant", "Núm. de Medidas Aplicadas").PropertiesEdit.DisplayFormatString = "n";
        });

        settings.Columns.AddBand(AnioActBand =>
        {
            AnioActBand.Caption = "Año Actual (estimado)";
            AnioActBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;

            AnioActBand.Columns.Add("NumInspeccion_Act", "Núm. de Inspecciones").PropertiesEdit.DisplayFormatString = "n";
            AnioActBand.Columns.Add("NumMedidasAplicadas_Act", "Núm. de Medidas Aplicadas").PropertiesEdit.DisplayFormatString = "n";
        });

        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumInspeccion_Ant").DisplayFormat = "n";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumMedidasAplicadas_Ant").DisplayFormat = "n";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumInspeccion_Act").DisplayFormat = "n";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumMedidasAplicadas_Act").DisplayFormat = "n";
        settings.Settings.ShowFooter = true;

        // Custom
        settings.SetEditFormTemplateContent(c =>
        {
            var atendido = ViewData["dataItem"] ?? c.DataItem;

            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table><tr><td>");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Nombre del PVI, Sitio de Inspección";
                edtSettings.AssociatedControlName = "NombrePVI_SitioInspeccion";
            }).Render();

            Html.DevExpress().TextBox(edtSettings =>
            {
                edtSettings.Name = "NombrePVI_SitioInspeccion";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
            }).Bind(DataBinder.Eval(atendido, "NombrePVI_SitioInspeccion"))
            .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Materia de Inspección";
                edtSettings.AssociatedControlName = "MateriaInspeccion";
            }).Render();

            Html.DevExpress().TextBox(edtSettings =>
            {
                edtSettings.Name = "MateriaInspeccion";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
            }).Bind(DataBinder.Eval(atendido, "MateriaInspeccion"))
            .Render();
            ViewContext.Writer.Write("</td></tr></table>");

            ViewContext.Writer.Write("<br >");
            ViewContext.Writer.Write("<hr align='left' width='100%'>");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Año Anterior:";
            }).Render();

            ViewContext.Writer.Write("<br >");
            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table><tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Número de Inspecciones:";
                edtSettings.AssociatedControlName = "NumInspeccion_Ant";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumInspeccion_Ant";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = c.KeyValue == null ? "Ingrese el Número de Inspecciones" : "Editar el Número de Inspecciones";
            }).Bind(DataBinder.Eval(atendido, "NumInspeccion_Ant"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Número de Medidas Aplicadas:";
                edtSettings.AssociatedControlName = "NumMedidasAplicadas_Ant";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumMedidasAplicadas_Ant";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = c.KeyValue == null ? "Ingrese el Número de Medidas Aplicadas" : "Editar el Número de Medidas Aplicadas";
            }).Bind(DataBinder.Eval(atendido, "NumMedidasAplicadas_Ant"))
              .Render();
            ViewContext.Writer.Write("</td></tr></table>");

            ViewContext.Writer.Write("<br >");
            ViewContext.Writer.Write("<hr align='left' width='100%'>");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Año Actual (estimado):";
            }).Render();

            ViewContext.Writer.Write("<br >");
            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table><tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Número de Inspecciones:";
                edtSettings.AssociatedControlName = "NumInspeccion_Act";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumInspeccion_Act";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = c.KeyValue == null ? "Ingrese el Número de Inspecciones" : "Editar el Número de Inspecciones";
            }).Bind(DataBinder.Eval(atendido, "NumInspeccion_Act"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Número de Medidas Aplicadas:";
                edtSettings.AssociatedControlName = "NumMedidasAplicadas_Act";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumMedidasAplicadas_Act";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = c.KeyValue == null ? "Ingrese el Número de Medidas Aplicadas" : "Editar el Número de Medidas Aplicadas";
            }).Bind(DataBinder.Eval(atendido, "NumMedidasAplicadas_Act"))
              .Render();
            ViewContext.Writer.Write("</td></tr></table>");

            ViewContext.Writer.Write("<br >");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnUpdat";
                btnSettings.Text = "Guardar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/guardar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Images.Image.Width = 16;
                btnSettings.ClientSideEvents.Click = "function(s, e){ AtendidoMovGridView.UpdateEdit(); }";
                btnSettings.ClientVisible = Convert.ToBoolean(ViewData["Escritura"]);
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnCance";
                btnSettings.Text = "Cancelar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/cancelar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Style["position"] = "relative";
                btnSettings.Style["left"] = "5px";
                btnSettings.ClientSideEvents.Click = "function(s, e){ AtendidoMovGridView.CancelEdit(); }";
            }).Render();
            ViewContext.Writer.Write("</br>");
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()