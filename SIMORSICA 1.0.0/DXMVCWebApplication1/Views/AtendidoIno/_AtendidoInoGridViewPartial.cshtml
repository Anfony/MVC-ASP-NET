@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "AtendidoInoGridView";
        settings.CallbackRouteValues = new { Controller = "AtendidoIno", Action = "AtendidoInoGridViewPartial", IdCampania = ViewData["IdCampania"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "AtendidoIno", Action = "AtendidoInoAddNew", IdCampania = ViewData["IdCampania"] };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "AtendidoIno", Action = "AtendidoInoUpdate", IdCampania = ViewData["IdCampania"] };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "AtendidoIno", Action = "AtendidoInoDelete", IdCampania = ViewData["IdCampania"] };
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

        settings.SettingsText.PopupEditFormCaption = "Edición de Atendido";

        settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.Modal = true;

        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.SettingsCommandButton.NewButton.Text = "Nuevo";
        settings.CommandColumn.ShowNewButtonInHeader = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowDeleteButton = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowEditButton = Convert.ToBoolean(ViewData["Escritura"]) || Convert.ToBoolean(ViewData["Lectura"]);

        settings.KeyFieldName = "Pk_IdAtendidoIno";

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSize = 5;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "15" };
        settings.Settings.ShowFilterRowMenu = true;

        settings.Columns.Add("TipoUnidad_Atendido.Nombre", "Tipo de Unidad");
        settings.Columns.Add("Especie_Cultivo", "Cultivo o Especie");
        settings.Columns.Add("NumUnidades", "Núm. Unidades").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("NumProductores", "Productores a Atender").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("NumUnidadesProductivas", "Unidades Productivas a Atender").PropertiesEdit.DisplayFormatString = "n";

        //Totales
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumUnidades").DisplayFormat = "n";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumProductores").DisplayFormat = "n";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "NumUnidadesProductivas").DisplayFormat = "n";
        settings.Settings.ShowFooter = true;

        // Custom
        settings.SetEditFormTemplateContent(c =>
        {
            var atendido = ViewData["dataItem"] ?? c.DataItem;

            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table><tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Tipo de Unidad:";
                edtSettings.AssociatedControlName = "FK_IdTipoUnidad_Atendido";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().ComboBox(edtSettings =>
            {
                edtSettings.Name = "FK_IdTipoUnidad_Atendido";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.TextField = "Nombre";
                edtSettings.Properties.ValueField = "Pk_IdTipoUnidad_Atendido";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.Properties.ValueType = typeof(int);
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                edtSettings.Properties.IncrementalFilteringDelay = 5;
                edtSettings.ToolTip = c.KeyValue == null ? "Seleccione un Tipo de Unidad" : "Cambiar Tipo de Unidad";
            }).BindList(DXMVCWebApplication1.Models.Senasica.GetTipoUnidad_Atendido())
              .Bind(DataBinder.Eval(atendido, "FK_IdTipoUnidad_Atendido"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Cultivo o Especie:";
                edtSettings.AssociatedControlName = "Especie_Cultivo";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().TextBox(edtSettings =>
            {
                edtSettings.Name = "Especie_Cultivo";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.ToolTip = "Ingresar el Cultivo o Especie";
            }).Bind(DataBinder.Eval(atendido, "Especie_Cultivo"))
              .Render();
            ViewContext.Writer.Write("</td></tr></table>");

            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table><tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Núm. Unidades:";
                edtSettings.AssociatedControlName = "NumUnidades";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumUnidades";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar el Núm. Unidades";
            }).Bind(DataBinder.Eval(atendido, "NumUnidades"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Productores a Atender:";
                edtSettings.AssociatedControlName = "NumProductores";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumProductores";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar Productores a Atender";
            }).Bind(DataBinder.Eval(atendido, "NumProductores"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Unidades Productivas a Atender:";
                edtSettings.AssociatedControlName = "NumUnidadesProductivas";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumUnidadesProductivas";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(220);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar Unidades Productivas a Atender";
            }).Bind(DataBinder.Eval(atendido, "NumUnidadesProductivas"))
              .Render();
            ViewContext.Writer.Write("</td></tr></table>");

            ViewContext.Writer.Write("<br >");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnUpdat";
                btnSettings.Text = "Guardar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/guardar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Images.Image.Width = 16;
                btnSettings.ClientSideEvents.Click = "function(s, e){ AtendidoInoGridView.UpdateEdit(); }";
                btnSettings.ClientVisible = Convert.ToBoolean(ViewData["Escritura"]);
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnCance";
                btnSettings.Text = "Cancelar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/cancelar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Style["position"] = "relative";
                btnSettings.Style["left"] = "5px";
                btnSettings.ClientSideEvents.Click = "function(s, e){ AtendidoInoGridView.CancelEdit(); }";
            }).Render();
            ViewContext.Writer.Write("</br>");
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()