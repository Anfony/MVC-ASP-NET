@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "UnidadesCertificarInoSVGridView";
        settings.CallbackRouteValues = new { Controller = "UnidadesCertificarInoSV", Action = "UnidadesCertificarInoSVGridViewPartial", IdCampania = ViewData["IdCampania"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "UnidadesCertificarInoSV", Action = "UnidadesCertificarInoSVAddNew", IdCampania = ViewData["IdCampania"] };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "UnidadesCertificarInoSV", Action = "UnidadesCertificarInoSVUpdate", IdCampania = ViewData["IdCampania"] };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "UnidadesCertificarInoSV", Action = "UnidadesCertificarInoSVDelete", IdCampania = ViewData["IdCampania"] };
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

        settings.SettingsText.PopupEditFormCaption = "Edición de Unidades a Certificar";

        settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.Modal = true;

        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.SettingsCommandButton.NewButton.Text = "Nuevo";
        settings.CommandColumn.ShowNewButtonInHeader = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowDeleteButton = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowEditButton = Convert.ToBoolean(ViewData["Escritura"]) || Convert.ToBoolean(ViewData["Lectura"]);

        settings.KeyFieldName = "Pk_IdUnidadesCertificarInoSV";

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSize = 5;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "15" };
        settings.Settings.ShowFilterRowMenu = true;

        settings.Columns.Add("TipoUnidad_UCSV.Nombre", "Tipo de Unidad");
        settings.Columns.Add("NumUnidadesTipo", "Num. Unidades por Tipo").PropertiesEdit.DisplayFormatString = "n";

        settings.Columns.AddBand(AnioAntBand =>
        {
            AnioAntBand.Caption = "Año Anterior";
            AnioAntBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;

            AnioAntBand.Columns.Add("AntProgramado", "Programado").PropertiesEdit.DisplayFormatString = "n";
            AnioAntBand.Columns.Add("AntRealizado", "Realizado").PropertiesEdit.DisplayFormatString = "n";
            AnioAntBand.Columns.Add("AntPorcentajeCumplimiento", "% cumplimiendo").PropertiesEdit.DisplayFormatString = "n";
        });

        settings.Columns.AddBand(AnioActBand =>
        {
            AnioActBand.Caption = "Año Actual";
            AnioActBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;

            AnioActBand.Columns.Add("ActProgramado", "Programado").PropertiesEdit.DisplayFormatString = "n";
            AnioActBand.Columns.Add("ActRealizado", "Realizado").PropertiesEdit.DisplayFormatString = "n";
            AnioActBand.Columns.Add("ActPorcentajeCumplimiento", "% cumplimiendo").PropertiesEdit.DisplayFormatString = "n";
        });

        // Custom
        settings.SetEditFormTemplateContent(c =>
        {
            var UnidadesCertificarInoSV = ViewData["dataItem"] ?? c.DataItem;
            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table><tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Tipo de Unidad:";
                edtSettings.AssociatedControlName = "FK_IdTipoUnidad_UCSV";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().ComboBox(edtSettings =>
            {
                edtSettings.Name = "FK_IdTipoUnidad_UCSV";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.TextField = "Nombre";
                edtSettings.Properties.ValueField = "Pk_IdTipoUnidad_UCSV";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.Properties.ValueType = typeof(int);
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                edtSettings.Properties.IncrementalFilteringDelay = 5;
                edtSettings.ToolTip = c.KeyValue == null ? "Seleccione un Tipo de Unidad" : "Cambiar Tipo de Unidad";
            }).BindList(DXMVCWebApplication1.Models.Senasica.GetTipoUnidad_UCSV())
              .Bind(DataBinder.Eval(UnidadesCertificarInoSV, "FK_IdTipoUnidad_UCSV"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Núm. Unidades por Tipo:";
                edtSettings.AssociatedControlName = "NumUnidadesTipo";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumUnidadesTipo";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar el Núm. Unidades por Tipo";
            }).Bind(DataBinder.Eval(UnidadesCertificarInoSV, "NumUnidadesTipo"))
              .Render();
            ViewContext.Writer.Write("</td></tr></table>");

            ViewContext.Writer.Write("<br >");
            ViewContext.Writer.Write("<hr align='left' width='100%'>");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Año Anterior:";
            }).Render();

            ViewContext.Writer.Write("<br >");
            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table><tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Programado:";
                edtSettings.AssociatedControlName = "AntProgramado";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "AntProgramado";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar Programado";
            }).Bind(DataBinder.Eval(UnidadesCertificarInoSV, "AntProgramado"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Realizado:";
                edtSettings.AssociatedControlName = "AntRealizado";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "AntRealizado";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar Realizado";
            }).Bind(DataBinder.Eval(UnidadesCertificarInoSV, "AntRealizado"))
              .Render();
            ViewContext.Writer.Write("</td></tr>");

            ViewContext.Writer.Write("<tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "% cumplimiendo:";
                edtSettings.AssociatedControlName = "AntPorcentajeCumplimiento";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "AntPorcentajeCumplimiento";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 100;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar % cumplimiendo";
            }).Bind(DataBinder.Eval(UnidadesCertificarInoSV, "AntPorcentajeCumplimiento"))
              .Render();

            ViewContext.Writer.Write("</td></tr></table>");

            ViewContext.Writer.Write("<br >");
            ViewContext.Writer.Write("<hr align='left' width='100%'>");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Año Actual (estimado):";
            }).Render();

            ViewContext.Writer.Write("<br >");
            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table><tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Programado:";
                edtSettings.AssociatedControlName = "ActProgramado";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "ActProgramado";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar Programado";
            }).Bind(DataBinder.Eval(UnidadesCertificarInoSV, "ActProgramado"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Realizado:";
                edtSettings.AssociatedControlName = "ActRealizado";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "ActRealizado";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar Realizado";
            }).Bind(DataBinder.Eval(UnidadesCertificarInoSV, "ActRealizado"))
              .Render();
            ViewContext.Writer.Write("</td></tr>");

            ViewContext.Writer.Write("<tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "% cumplimiendo:";
                edtSettings.AssociatedControlName = "ActPorcentajeCumplimiento";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "ActPorcentajeCumplimiento";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 100;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Ingresar % cumplimiendo";
            }).Bind(DataBinder.Eval(UnidadesCertificarInoSV, "ActPorcentajeCumplimiento"))
              .Render();
            ViewContext.Writer.Write("</td></tr></table>");

            ViewContext.Writer.Write("<br >");

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnUpdat";
                btnSettings.Text = "Guardar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/guardar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Images.Image.Width = 16;
                btnSettings.ClientSideEvents.Click = "function(s, e){ UnidadesCertificarInoSVGridView.UpdateEdit(); }";
                btnSettings.ClientVisible = Convert.ToBoolean(ViewData["Escritura"]);
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnCance";
                btnSettings.Text = "Cancelar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/cancelar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Style["position"] = "relative";
                btnSettings.Style["left"] = "5px";
                btnSettings.ClientSideEvents.Click = "function(s, e){ UnidadesCertificarInoSVGridView.CancelEdit(); }";
            }).Render();
            ViewContext.Writer.Write("</br>");
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()