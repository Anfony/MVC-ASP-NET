@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "InoCompSVGridView" + ViewData["IdCampania"];
        settings.SettingsDetail.MasterGridName = "CampaniaInoSVGridView";
        settings.CallbackRouteValues = new { Controller = "InoSVAtendido", Action = "InoCompSVGridViewPartial", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "InoSVAtendido", Action = "InoCompSVGridViewPartialAddNew", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "InoSVAtendido", Action = "InoCompSVGridViewPartialUpdate", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "InoSVAtendido", Action = "InoCompSVGridViewPartialDelete", IdCampania = ViewData["IdCampania"], IdEstado = ViewData["IdEstado"] };
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

        settings.SettingsPopup.EditForm.Height = 220;
        settings.SettingsPopup.EditForm.Width = 625;
        settings.SettingsPopup.EditForm.HorizontalAlign = DevExpress.Web.ASPxClasses.PopupHorizontalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.VerticalAlign = DevExpress.Web.ASPxClasses.PopupVerticalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.Modal = true;

        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        //settings.CommandColumn.ShowNewButton = true;
        settings.SettingsCommandButton.NewButton.Text = "Nuevo Registro";
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Pk_IdInoCompSV";

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSize = 3;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "15" };
        settings.Settings.ShowFilterRowMenu = true;


        int? IdEstado = Convert.ToInt32(ViewData["IdEstado"]);
        settings.Columns.Add(column =>
        {
            column.FieldName = "Fk_IdMunicipio";
            column.Caption = "Municipio";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = DXMVCWebApplication1.Models.Senasica.GetMunicipiosByEstado(IdEstado);
            comboBoxProperties.TextField = "Nombre";
            comboBoxProperties.ValueField = "Pk_IdMunicipio";
            comboBoxProperties.ValueType = typeof(int);
            comboBoxProperties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
        });
        settings.Columns.Add("Cultivo");
        settings.Columns.Add("Empresa");
        settings.Columns.Add("UnidadesProduccion", "Unidades de Producción").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("Toneladas").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("Produccion", "Producción").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("Extraccion", "Extracción").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("Acopio").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("ProcesoPrimario", "Proceso Primario").PropertiesEdit.DisplayFormatString = "n";

        settings.Columns.AddBand(AnioAntBand =>
        {
            AnioAntBand.Caption = "Años";
            AnioAntBand.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            AnioAntBand.Columns.Add("UpAnioAnterior", "Anterior").PropertiesEdit.DisplayFormatString = "n";
            AnioAntBand.Columns.Add("UpAnioActual", "Actual").PropertiesEdit.DisplayFormatString = "n";
        });

        //Inicia Popup
        settings.SetEditFormTemplateContent(c =>
        {
            var inocompsv = ViewData["dataItem"] ?? c.DataItem;
            ViewContext.Writer.Write("<p>Atendido por Sanidad Vegetal</p>");
            ViewContext.Writer.Write(
      "<table>" +
      "<tr>" +
         "<td>");

            Html.DevExpress().Label(
                  edtSettings =>
                  {
                      edtSettings.ControlStyle.CssClass = "label";
                      edtSettings.Text = "Municipio";
                      edtSettings.AssociatedControlName = "Fk_IdMunicipio";
                  }
              )
              .Render();
            Html.DevExpress().ComboBox(
                edtSettings =>
                {
                    edtSettings.Name = "Fk_IdMunicipio";
                    edtSettings.Properties.NullText = "Campo Requerido";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.Properties.TextField = "Nombre";
                    edtSettings.Properties.ValueField = "Pk_IdMunicipio";
                    edtSettings.Properties.ValueType = typeof(int);
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                    edtSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                    edtSettings.Properties.IncrementalFilteringDelay = 5;
                }
            )

            .BindList(DXMVCWebApplication1.Models.Senasica.GetMunicipiosByEstado(IdEstado))
               .Bind(DataBinder.Eval(inocompsv, "Fk_IdMunicipio"))
               .Render();

            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                       edtSettings =>
                       {
                           edtSettings.ControlStyle.CssClass = "label";
                           edtSettings.Text = "Cultivo:";
                           edtSettings.AssociatedControlName = "Cultivo";
                       }
                   )
                   .Render();
            Html.DevExpress().TextBox(
                edtSettings =>
                {
                    edtSettings.Name = "Cultivo";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "Cultivo"))
            .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                       edtSettings =>
                       {
                           edtSettings.ControlStyle.CssClass = "label";
                           edtSettings.Text = "Empresa:";
                           edtSettings.AssociatedControlName = "Empresa";
                       }
                   )
                   .Render();
            Html.DevExpress().TextBox(
                edtSettings =>
                {
                    edtSettings.Name = "Empresa";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "Empresa"))
            .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                       edtSettings =>
                       {
                           edtSettings.ControlStyle.CssClass = "label";
                           edtSettings.Text = "Unidades de Producción:";
                           edtSettings.AssociatedControlName = "UnidadesProduccion";
                       }
                   )
                   .Render();
            Html.DevExpress().SpinEdit(
                edtSettings =>
                {
                    edtSettings.Name = "UnidadesProduccion";
                    edtSettings.Properties.MinValue = 0;
                    edtSettings.Properties.MaxValue = 999999999;
                    edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                    edtSettings.Properties.Increment = 0.1M;
                    edtSettings.Properties.LargeIncrement = 1;
                    edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                    edtSettings.Properties.DisplayFormatString = "n";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "UnidadesProduccion"))
            .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("</tr>");
            ViewContext.Writer.Write("<tr>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                      edtSettings =>
                      {
                          edtSettings.ControlStyle.CssClass = "label";
                          edtSettings.Text = "Toneladas:";
                          edtSettings.AssociatedControlName = "Toneladas";
                      }
                  )
                  .Render();
            Html.DevExpress().SpinEdit(
                edtSettings =>
                {
                    edtSettings.Name = "Toneladas";
                    edtSettings.Properties.MinValue = 0;
                    edtSettings.Properties.MaxValue = 999999999;
                    edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                    edtSettings.Properties.Increment = 0.1M;
                    edtSettings.Properties.LargeIncrement = 1;
                    edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                    edtSettings.Properties.DisplayFormatString = "n";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "Toneladas"))
            .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                      edtSettings =>
                      {
                          edtSettings.ControlStyle.CssClass = "label";
                          edtSettings.Text = "Producción:";
                          edtSettings.AssociatedControlName = "Produccion";
                      }
                  )
                  .Render();
            Html.DevExpress().SpinEdit(
                edtSettings =>
                {
                    edtSettings.Name = "Produccion";
                    edtSettings.Properties.MinValue = 0;
                    edtSettings.Properties.MaxValue = 999999999;
                    edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                    edtSettings.Properties.Increment = 0.1M;
                    edtSettings.Properties.LargeIncrement = 1;
                    edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                    edtSettings.Properties.DisplayFormatString = "n";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "Produccion"))
            .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                      edtSettings =>
                      {
                          edtSettings.ControlStyle.CssClass = "label";
                          edtSettings.Text = "Extracción:";
                          edtSettings.AssociatedControlName = "Extraccion";
                      }
                  )
                  .Render();
            Html.DevExpress().SpinEdit(
                edtSettings =>
                {
                    edtSettings.Name = "Extraccion";
                    edtSettings.Properties.MinValue = 0;
                    edtSettings.Properties.MaxValue = 999999999;
                    edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                    edtSettings.Properties.Increment = 0.1M;
                    edtSettings.Properties.LargeIncrement = 1;
                    edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                    edtSettings.Properties.DisplayFormatString = "n";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "Extraccion"))
            .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                      edtSettings =>
                      {
                          edtSettings.ControlStyle.CssClass = "label";
                          edtSettings.Text = "Acopio:";
                          edtSettings.AssociatedControlName = "Acopio";
                      }
                  )
                  .Render();
            Html.DevExpress().SpinEdit(
                edtSettings =>
                {
                    edtSettings.Name = "Acopio";
                    edtSettings.Properties.MinValue = 0;
                    edtSettings.Properties.MaxValue = 999999999;
                    edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                    edtSettings.Properties.Increment = 0.1M;
                    edtSettings.Properties.LargeIncrement = 1;
                    edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                    edtSettings.Properties.DisplayFormatString = "n";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "Acopio"))
            .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("</tr>");
            ViewContext.Writer.Write("<tr>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                      edtSettings =>
                      {
                          edtSettings.ControlStyle.CssClass = "label";
                          edtSettings.Text = "Proceso Primario:";
                          edtSettings.AssociatedControlName = "ProcesoPrimario";
                      }
                  )
                  .Render();
            Html.DevExpress().SpinEdit(
                edtSettings =>
                {
                    edtSettings.Name = "ProcesoPrimario";
                    edtSettings.Properties.MinValue = 0;
                    edtSettings.Properties.MaxValue = 999999999;
                    edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                    edtSettings.Properties.Increment = 0.1M;
                    edtSettings.Properties.LargeIncrement = 1;
                    edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                    edtSettings.Properties.DisplayFormatString = "n";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "ProcesoPrimario"))
            .Render();

            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                      edtSettings =>
                      {
                          edtSettings.ControlStyle.CssClass = "label";
                          edtSettings.Text = "Up Año Anterior:";
                          edtSettings.AssociatedControlName = "UpAnioAnterior";
                      }
                  )
                  .Render();
            Html.DevExpress().SpinEdit(
                edtSettings =>
                {
                    edtSettings.Name = "UpAnioAnterior";
                    edtSettings.Properties.MinValue = 0;
                    edtSettings.Properties.MaxValue = 999999999;
                    edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                    edtSettings.Properties.Increment = 0.1M;
                    edtSettings.Properties.LargeIncrement = 1;
                    edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                    edtSettings.Properties.DisplayFormatString = "n";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "UpAnioAnterior"))
            .Render();

            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(
                      edtSettings =>
                      {
                          edtSettings.ControlStyle.CssClass = "label";
                          edtSettings.Text = "Up Año Actual:";
                          edtSettings.AssociatedControlName = "UpAnioActual";
                      }
                  )
                  .Render();
            Html.DevExpress().SpinEdit(
                edtSettings =>
                {
                    edtSettings.Name = "UpAnioActual";
                    edtSettings.Properties.MinValue = 0;
                    edtSettings.Properties.MaxValue = 999999999;
                    edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                    edtSettings.Properties.Increment = 0.1M;
                    edtSettings.Properties.LargeIncrement = 1;
                    edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                    edtSettings.Properties.DisplayFormatString = "n";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ShowModelErrors = true;
                    edtSettings.Width = Unit.Pixel(250);
                }
            )
            .Bind(DataBinder.Eval(inocompsv, "UpAnioActual"))
            .Render();

            ViewContext.Writer.Write("</td>");
            
            ViewContext.Writer.Write("</tr>");
            ViewContext.Writer.Write("</table>");

            ViewContext.Writer.Write("<br>");
            Html.DevExpress().Button(
                       btnSettings =>
                       {
                           btnSettings.Name = "btnUpdatInoCompSVGridView";
                           btnSettings.Text = "Guardar";
                           btnSettings.ControlStyle.CssClass = "button";
                           btnSettings.Images.Image.Url = "Content/Images/guardar.png";
                           btnSettings.ImagePosition = ImagePosition.Right;
                           btnSettings.Images.Image.Width = 16;
                           btnSettings.ClientSideEvents.Click = "function(s, e){ InoCompSVGridView" + ViewData["IdCampania"] + ".UpdateEdit(); }";
                       }
                   )
                   .Render();

            Html.DevExpress().Button(
                btnSettings =>
                {
                    btnSettings.Name = "btnCanceInoCompSVGridView";
                    btnSettings.Text = "Cancelar";
                    btnSettings.ControlStyle.CssClass = "button";
                       btnSettings.Images.Image.Url = "Content/Images/cancelar.png";
                    btnSettings.ImagePosition = ImagePosition.Right;
                    btnSettings.Style["position"] = "relative";
                    btnSettings.Style["left"] = "5px";
                    btnSettings.ClientSideEvents.Click = "function(s, e){ InoCompSVGridView" + ViewData["IdCampania"] + ".CancelEdit(); }";
                }
            )
            .Render();
            ViewContext.Writer.Write("</br>");
        });

    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
