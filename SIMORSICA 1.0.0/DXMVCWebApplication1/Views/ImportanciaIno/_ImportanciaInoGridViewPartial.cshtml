@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "ImportanciaInoGridView";
        settings.CallbackRouteValues = new { Controller = "ImportanciaIno", Action = "ImportanciaInoGridViewPartial", IdCampania = ViewData["IdCampania"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ImportanciaIno", Action = "ImportanciaInoAddNew", IdCampania = ViewData["IdCampania"] };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ImportanciaIno", Action = "ImportanciaInoUpdate", IdCampania = ViewData["IdCampania"] };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ImportanciaIno", Action = "ImportanciaInoDelete", IdCampania = ViewData["IdCampania"] };
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

        settings.SettingsText.PopupEditFormCaption = "Edición de Importancia";

        settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.Modal = true;

        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.SettingsCommandButton.NewButton.Text = "Nuevo";
        settings.CommandColumn.ShowNewButtonInHeader = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowDeleteButton = Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowEditButton = Convert.ToBoolean(ViewData["Escritura"]) || Convert.ToBoolean(ViewData["Lectura"]);

        settings.KeyFieldName = "Pk_IdImportanciaIno";

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSize = 5;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "15" };
        settings.Settings.ShowFilterRowMenu = true;

        settings.Columns.Add("Especie_Cultivo", "Especie o cultivo");
        settings.Columns.Add("NumUnidadesEspecie", "Número de Unidades por especie").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("TipoProduccion.Nombre", "Tipo de Producción");
        settings.Columns.Add("DestinoProduccion.Nombre", "Mercado Destino");
        settings.Columns.Add("TendenciaProduccion.Nombre", "Tendencia de la Producción");
        settings.Columns.Add("TendenciaProduccion.EsAfectado", "Afectado por Contaminantes");
        
        settings.Columns.Add("NumUnidadesAfectadas", "Num. Unidades Afectadas").PropertiesEdit.DisplayFormatString = "n";

        // Custom
        settings.SetEditFormTemplateContent(c =>
        {
            var ImportanciaIno = ViewData["dataItem"] ?? c.DataItem;
            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table><tr>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Especie o cultivo:";
                edtSettings.AssociatedControlName = "Especie_Cultivo";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().TextBox(edtSettings =>
            {
                edtSettings.Name = "Especie_Cultivo";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.ToolTip = "Ingresar el Cultivo o Especie";
            }).Bind(DataBinder.Eval(ImportanciaIno, "Especie_Cultivo"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Tipo de Producción:";
                edtSettings.AssociatedControlName = "FK_IdTipoProduccion";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().ComboBox(edtSettings =>
            {
                edtSettings.Name = "FK_IdTipoProduccion";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.TextField = "Nombre";
                edtSettings.Properties.ValueField = "Pk_IdTipoProduccion";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.Properties.ValueType = typeof(int);
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                edtSettings.Properties.IncrementalFilteringDelay = 5;
                edtSettings.ToolTip = c.KeyValue == null ? "Seleccione un Tipo de Producción" : "Cambiar Tipo de Producción";
            }).BindList(DXMVCWebApplication1.Models.Senasica.GetTipoProduccion())
              .Bind(DataBinder.Eval(ImportanciaIno, "FK_IdTipoProduccion"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Destino de la Producción:";
                edtSettings.AssociatedControlName = "FK_IdDestinoProduccion";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().ComboBox(edtSettings =>
            {
                edtSettings.Name = "FK_IdDestinoProduccion";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.TextField = "Nombre";
                edtSettings.Properties.ValueField = "Pk_IdDestinoProduccion";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.Properties.ValueType = typeof(int);
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                edtSettings.Properties.IncrementalFilteringDelay = 5;
                edtSettings.ToolTip = c.KeyValue == null ? "Seleccione un Destino de la Producción" : "Cambiar Destino de la Producción";
            }).BindList(DXMVCWebApplication1.Models.Senasica.GetDestinoProduccion())
              .Bind(DataBinder.Eval(ImportanciaIno, "FK_IdDestinoProduccion"))
              .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("</tr>");

            ViewContext.Writer.Write("<tr>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Tendencia de la Producción:";
                edtSettings.AssociatedControlName = "FK_IdTendenciaProduccion";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().ComboBox(edtSettings =>
            {
                edtSettings.Name = "FK_IdTendenciaProduccion";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.TextField = "Nombre";
                edtSettings.Properties.ValueField = "Pk_IdTendenciaProduccion";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.Properties.ValueType = typeof(int);
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                edtSettings.Properties.IncrementalFilteringDelay = 5;
                edtSettings.ToolTip = c.KeyValue == null ? "Seleccione Tendencia de la Producción" : "Cambiar Tendencia de la Producción";
            }).BindList(DXMVCWebApplication1.Models.Senasica.GetTendenciaProduccion())
              .Bind(DataBinder.Eval(ImportanciaIno, "FK_IdTendenciaProduccion"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Número de Unidades por especie:";
                edtSettings.AssociatedControlName = "NumUnidadesEspecie";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumUnidadesEspecie";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Número de Unidades por especie";
            }).Bind(DataBinder.Eval(ImportanciaIno, "NumUnidadesEspecie"))
              .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Número de Unidades afectadas:";
                edtSettings.AssociatedControlName = "NumUnidadesAfectadas";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "NumUnidadesAfectadas";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(250);
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.Increment = 1M;
                edtSettings.Properties.LargeIncrement = 5;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.Properties.DisplayFormatString = "n";
                edtSettings.ToolTip = "Número de Unidades por especie";
            }).Bind(DataBinder.Eval(ImportanciaIno, "NumUnidadesAfectadas"))
              .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("</tr>");

            ViewContext.Writer.Write("<tr>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "¿Ha sido afectado por contaminantes?:";
                edtSettings.AssociatedControlName = "esAfectado";
            }).Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().CheckBox(edtSettings =>
            {
                edtSettings.Name = "esAfectado";
                edtSettings.Text = "¿Es afectado?";
            }).Bind(DataBinder.Eval(ImportanciaIno, "esAfectado"))
            .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("</tr></table>");

            ViewContext.Writer.Write("<br >");

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnUpdat";
                btnSettings.Text = "Guardar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/guardar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Images.Image.Width = 16;
                btnSettings.ClientSideEvents.Click = "function(s, e){ ImportanciaInoGridView.UpdateEdit(); }";
                btnSettings.ClientVisible = Convert.ToBoolean(ViewData["Escritura"]);
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnCance";
                btnSettings.Text = "Cancelar";
                btnSettings.ControlStyle.CssClass = "button";
                btnSettings.Images.Image.Url = "Content/Images/cancelar.png";
                btnSettings.ImagePosition = ImagePosition.Right;
                btnSettings.Style["position"] = "relative";
                btnSettings.Style["left"] = "5px";
                btnSettings.ClientSideEvents.Click = "function(s, e){ ImportanciaInoGridView.CancelEdit(); }";
            }).Render();
            ViewContext.Writer.Write("</br>");
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()