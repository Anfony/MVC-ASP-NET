
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "TesoFeGridViewPartial";
        settings.Style["position"] = "relative";
        settings.Style["left"] = "10px";
        settings.CallbackRouteValues = new { Controller = "Tesofe", Action = "TesoFeGridViewPartial" };
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Tesofe", Action = "TesoFeAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Tesofe", Action = "TesoFeUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Tesofe", Action = "TesoFeDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

        settings.SettingsBehavior.ConfirmDelete = true;

        settings.SettingsPopup.EditForm.Height = 155;
        settings.SettingsPopup.EditForm.Width = 600;
        settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SettingsPopup.EditForm.Modal = true;

        settings.SettingsText.PopupEditFormCaption = "Tesorería de la Federación";
        settings.KeyFieldName = "Pk_IdTesofe";

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowClearFilterButton = true;
        settings.CommandColumn.ShowNewButtonInHeader =  Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowDeleteButton =  Convert.ToBoolean(ViewData["Escritura"]);
        settings.CommandColumn.ShowEditButton =  Convert.ToBoolean(ViewData["Escritura"]) || Convert.ToBoolean(ViewData["Lectura"]);

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "15" };
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.Columns.Add("UnidadEjecutora.Nombre", "Comité");
        settings.Columns.Add("TipoDeRecurso.Nombre", "Tipo de Recurso");
        settings.Columns.Add("TipoReembolso.Nombre", "Tipo de Reintegro");
        settings.Columns.Add("Fecha", "Fecha de Reintegro").PropertiesEdit.DisplayFormatString = "d";
        settings.Columns.Add("Importe", "Total Reintegro").PropertiesEdit.DisplayFormatString = "c";
        settings.Columns.Add("ImporteDetalle", "Total Registrado").PropertiesEdit.DisplayFormatString = "c";
        var diferenciaimporte = settings.Columns.Add("diferenciaimporte", "Status Importe");
        var documento = settings.Columns.Add("documento", "Publicación de Comprobante");
        diferenciaimporte.UnboundType = DevExpress.Data.UnboundColumnType.String;
        documento.UnboundType = DevExpress.Data.UnboundColumnType.String;

        settings.CustomUnboundColumnData = (sender, e) =>
        {
            if (e.Column.FieldName == "diferenciaimporte")
            {
                bool a = Convert.ToString(e.GetListSourceFieldValue("Importe")) == Convert.ToString(e.GetListSourceFieldValue("ImporteDetalle")) ? true : false;                    
                if (a) e.Value = "CORRECTO";
                else e.Value = "-- AJUSTAR REINTEGRO --";

                e.Column.ReadOnly = true;
            }

            if (e.Column.FieldName == "documento")
            {
                if (e.GetListSourceFieldValue("Documento") != null) e.Value = "LISTO";
                else e.Value = "-- PENDIENTE --";

                e.Column.ReadOnly = true;
            }
        };
        settings.Settings.ShowFooter = true;
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Importe").DisplayFormat = "c";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "ImporteDetalle").DisplayFormat = "c";
        settings.SetEditFormTemplateContent(c =>
        {
            var tesofe = ViewData["dataItem"] ?? c.DataItem;
                     
            ViewContext.Writer.Write("<table>");                        
            ViewContext.Writer.Write("<tr>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Tipo de Recurso";
                edtSettings.Name = "Fk_IdTipoDeRecursoLabel";
            }).Render();

            Html.DevExpress().ComboBox(edtSettings =>
            {
                edtSettings.Name = "Fk_IdTipoDeRecurso";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.TextField = "Nombre";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.Properties.ValueField = "Pk_IdTipoDeRecurso";
                edtSettings.Properties.ValueType = typeof(int);
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(280);
                edtSettings.ToolTip = "Seleccione el Tipo de Recurso";
            }).BindList(DXMVCWebApplication1.Models.Senasica.GetTiposDeRecurso())
               .Bind(DataBinder.Eval(tesofe, "Fk_IdTipoDeRecurso"))
               .Render();
            ViewContext.Writer.Write("</td>");

            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Tipo de Reintegro";
                edtSettings.Name = "Fk_IdTipoReembolsoLabel";
            }).Render();

            Html.DevExpress().ComboBox(edtSettings =>
            {
                edtSettings.Name = "Fk_IdTipoReembolso";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.TextField = "Nombre";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.Properties.ValueField = "Pk_IdTipoReembolso";
                edtSettings.Properties.ValueType = typeof(int);
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(280);
                edtSettings.ToolTip = "Seleccione el Tipo de Reintegro";
            }).BindList(DXMVCWebApplication1.Models.Senasica.GetTiposDeReembolsoRestante())
               .Bind(DataBinder.Eval(tesofe, "Fk_IdTipoReembolso"))
               .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("</tr>");            
            ViewContext.Writer.Write("</table>");

            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<table>");
            ViewContext.Writer.Write("<tr>");
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Fecha de Reintegro";
                edtSettings.Name = "FechaLabel";
            }).Render();

            Html.DevExpress().DateEdit(edtSettings =>
            {
                edtSettings.Name = "Fecha";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(280);
                edtSettings.ToolTip = "Agrege la Fecha de Reintegro";
                edtSettings.Properties.MinDate = DateTime.Parse(ViewData["FechaIni"].ToString());
                edtSettings.Properties.MaxDate = DateTime.Today;
            }).Bind(DataBinder.Eval(tesofe, "Fecha"))
              .Render();
            ViewContext.Writer.Write("</td>");
            
            ViewContext.Writer.Write("<td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Importe";
                edtSettings.Name = "ImporteLAbel";
            }).Render();

            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "Importe";
                edtSettings.Properties.NullText = "Campo Requerido";
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 999999999;
                edtSettings.Properties.DecimalPlaces = 2;
                edtSettings.Properties.NumberType = SpinEditNumberType.Float;
                edtSettings.Properties.Increment = 0.1M;
                edtSettings.Properties.LargeIncrement = 1;
                edtSettings.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.ShowModelErrors = true;
                edtSettings.Width = Unit.Pixel(280);
                edtSettings.Properties.DisplayFormatString = "c";
            }).Bind(DataBinder.Eval(tesofe, "Importe"))
            .Render();
            ViewContext.Writer.Write("</td>");
            ViewContext.Writer.Write("</tr>");
            ViewContext.Writer.Write("</table>");
            
            ViewContext.Writer.Write("<br >");
            
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ClientVisible = c.KeyValue == null ? false : true;
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = "Si actualiza el Importe, guarde los cambios."+ "\nPosteriormente ajuste el origen del reintegro proveniente de los Proyectos Autorizados";
                edtSettings.Name = "Updateinfor"; 
                edtSettings.ControlStyle.ForeColor = System.Drawing.Color.Red;
            }).Render();
            
            ViewContext.Writer.Write("<br >");

            ViewContext.Writer.Write("<div style='float:right'>");
            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnUpdate";
                btnSettings.Text = "Guardar";
                btnSettings.Images.Image.Url = "/Content/Images/guardar.png";
                btnSettings.Images.Image.Width = 16;
                btnSettings.ClientSideEvents.Click = "function(s, e){ TesoFeGridViewPartial.UpdateEdit(); }";
                btnSettings.ClientVisible = Convert.ToBoolean(ViewData["Escritura"]);
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnCancel";
                btnSettings.Text = "Cancelar";
                btnSettings.Images.Image.Url = "/Content/Images/cancelar.png";
                btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                btnSettings.ClientSideEvents.Click = "function(s, e){ TesoFeGridViewPartial.CancelEdit(); }";
            }).Render();
            ViewContext.Writer.Write("</div>");

            Html.DevExpress().PageControl(PCsettings =>
            {
                PCsettings.Name = "pcScrolling";
                PCsettings.Width = Unit.Percentage(100);
                PCsettings.Height = 300;
                PCsettings.EnableTabScrolling = true;
                PCsettings.TabAlign = TabAlign.Justify;
                PCsettings.Styles.Tab.CssClass = "scrolling_Tab";

                PCsettings.Name = "pcFeatures";
                PCsettings.ClientVisible = c.KeyValue == null ? false : true;

                PCsettings.TabPages.Add("Reintegros").SetContent(() =>
                {
                    ViewContext.Writer.Write("<br >");
                    Html.RenderPartial("~/Views/ExportExcelPDF/_ExportExcelPDF.cshtml", new ViewDataDictionary
                                                                                    {
                                                                                        { "Clave", DXMVCWebApplication1.Common.ListaPantallas.UE_TESOFE_DETALLE },
                                                                                        { "IdTesofe", DataBinder.Eval(tesofe, "Pk_IdTesofe") }
                                                                                    });
                    ViewContext.Writer.Write("<br >");

                    Html.RenderAction("TesofeDetalleGridViewPartial", "TesofeDetalle", new { IdTesofe = DataBinder.Eval(tesofe, "Pk_IdTesofe") });
                });

                PCsettings.TabPages.Add("Comprobantes").SetContent(() =>
                {
                    Html.RenderAction("Index", "ArchivosTesoFe", new { IdTesofe = DataBinder.Eval(tesofe, "Pk_IdTesofe") });
                });
                
            }).GetHtml();
        });
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()
